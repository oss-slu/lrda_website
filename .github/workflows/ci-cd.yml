name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - openai_tags
      - memoryleak
      - december-sprint
  pull_request:
    branches:
      - main
      - openai_tags
      - memoryleak
      - december-sprint

permissions:
  contents: read
  actions: read
  deployments: write      # Required for Netlify deployment status

jobs:
  # Job 1: Unit Tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run unit tests
        run: pnpm test:unit
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: "mock-api-key-for-ci"
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: "mock-domain.firebaseapp.com"
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: "mock-project-id"
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: "mock-project.appspot.com"
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: "123456789"
          NEXT_PUBLIC_FIREBASE_APP_ID: "1:123456789:web:abcdef"
          NEXT_PUBLIC_RERUM_PREFIX: "https://store.rerum.io/v1"
          NEXT_PUBLIC_OPENAI_API_KEY: "mock-openai-key"
          NEXT_PUBLIC_OPENAI_API_URL: "https://api.openai.com/v1"
          CI: "true"

  # Job 2: E2E Tests (includes build)
  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    timeout-minutes: 60

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps

      - name: Build the application
        run: pnpm build
        env:
          CI: true
          NEXT_PUBLIC_FIREBASE_API_KEY: "ci-mock-key"
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: "ci-mock-domain"
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: "ci-mock-project"
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: "ci-mock-bucket"
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: "123456789"
          NEXT_PUBLIC_FIREBASE_APP_ID: "ci-mock-app-id"
          NEXT_PUBLIC_RERUM_PREFIX: "ci-mock-prefix"
          NEXT_PUBLIC_OPENAI_API_KEY: "ci-mock-openai-key"
          NEXT_PUBLIC_OPENAI_API_URL: "https://api.openai.com/v1/chat/completions"

      - name: Start the application
        run: |
          pnpm start &
          sleep 10
          timeout 60 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

      - name: Run Playwright tests
        run: pnpm exec playwright test --project=chromium
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/
          retention-days: 30

  # Job 3: Deploy to Netlify (only on push events, after all tests pass)
  # Deploys to production on main branch, staging on other branches
  deploy-netlify:
    name: Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    if: github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.11.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the application
        run: pnpm build
        env:
          CI: true
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_RERUM_PREFIX: ${{ secrets.NEXT_PUBLIC_RERUM_PREFIX }}
          NEXT_PUBLIC_OPENAI_API_KEY: ${{ secrets.NEXT_PUBLIC_OPENAI_API_KEY }}
          NEXT_PUBLIC_OPENAI_API_URL: ${{ secrets.NEXT_PUBLIC_OPENAI_API_URL }}

      - name: Setup Netlify CLI
        run: npm install -g netlify-cli

      - name: Deploy to Netlify
        id: netlify-deploy
        run: |
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "Deploying to production..."
            netlify deploy --prod --dir=.next --auth=${{ secrets.NETLIFY_AUTH_TOKEN }} --site=${{ secrets.NETLIFY_SITE_ID }}
          else
            echo "Deploying preview for branch: ${{ github.ref_name }}"
            netlify deploy --dir=.next --auth=${{ secrets.NETLIFY_AUTH_TOKEN }} --site=${{ secrets.NETLIFY_SITE_ID }}
          fi
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

